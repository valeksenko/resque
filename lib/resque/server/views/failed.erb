<%
start = params[:start].to_i
klazz = params[:class]
index = 0
date_format = "%Y/%m/%d %T %z"
highlight_amount = 1_000
failed = []
amount = (Resque::Failure.count > 20_000) ? 1_000 : 20
totals = Hash.new(0)

if Resque::Failure.count < 100_000

  failed_index = 0
  i = 0
  begin
    messages = Resque::Failure.all(i, amount)
    messages.each do |m|
      next if (m.nil? || m['payload'].nil? || m['payload']['class'].nil?)
      totals[m['payload']['class']] += 1
      if m['payload']['class'] == klazz
        failed << m if (failed_index >= start) && (failed.size < amount)
        failed_index += 1
      end 
    end
    i += amount
  end while messages.size == amount

  if klazz
    total = totals[klazz]
  else
    failed = Resque::Failure.all(start, amount)
    total = Resque::Failure.count
  end

  too_many = false

else
  failed = Resque::Failure.all(start, amount)
  total = Resque::Failure.count
  too_many = true
end
%>

<h1>Failed Jobs</h1>
<%unless failed.empty?%>
<form method="POST" action="<%=u 'failed/clear', klazz %>">
  <input type='submit' name='' value='Clear <%= klazz %> Failed Jobs' />
</form>
<form method="POST" action="<%=u 'failed/requeue/all'%>">
  <input type='submit' name='' value='Retry Failed Jobs' />
</form>
<%end%>

<% if too_many %>
<b>Note: too many failed jobs, event grouping disabled</b>
<% else %>
<h2>Summary</h2>
<p>
  <table>
    <% totals.each do |k,v| %>
    <tr>
      <th><a href="/failed?class=<%= k %>"><span class="failed"><%= k %></span></a></th>
      <td class="failed<%= (v.to_i > highlight_amount) ? '_many' : '' %>"><%= v %></td>
      <td>
        <form method='POST' action='<%=u "failed/requeue_and_clear/#{ k }" %>' style='padding-top: 10px;'>
          <input type='submit' name='' value='Retry and Delete' />
        </form>
      </td>
    </tr>
    <% end %>
  </table>
</p>
<% end %>

<p class='sub'>Showing <%=start%> to <%= start + amount %> of <b><%= total %></b> jobs</p>

<ul class='failed'>
  <%for job in failed.select { |j| j && j['worker'] } %>
    <% index += 1 %>
    <li>
      <dl>
        <% if job.nil? %>
        <dt>Error</dt>
        <dd>Job <%= index%> could not be parsed; perhaps it contains invalid JSON?</dd>
        <% else %>
        <dt>Worker</dt>
        <dd>
          <a href="<%= u(:workers, job['worker']) %>"><%= job['worker'].split(':')[0...2].join(':') %></a> on <b class='queue-tag'><%= job['queue'] %></b > at <b><span class="time"><%= Time.parse(job['failed_at']).strftime(date_format) %></span></b>
          <% if job['retried_at'] %>
            <div class='retried'>
              Retried <b><span class="time"><%= Time.parse(job['retried_at']).strftime(date_format) %></span></b>
              <a href="<%= u "failed/remove/#{start + index - 1}" %>" class="remove" rel="remove">Remove</a>
            </div>
          <% else %>
            <div class='controls'>
              <a href="<%= u "failed/requeue/#{start + index - 1}" %>" rel="retry">Retry</a>
              or
              <a href="<%= u "failed/remove/#{start + index - 1}" %>" rel="remove">Remove</a>
            </div>
          <% end %>
        </dd>
        <dt>Class</dt>
        <dd><code><%= job['payload'] ? job['payload']['class'] : 'nil' %></code></dd>
        <dt>Arguments</dt>
        <dd><pre><%=h job['payload'] ? show_args(job['payload']['args']) : 'nil' %></pre></dd>
        <dt>Exception</dt>
        <dd><code><%= job['exception'] %></code></dd>
        <dt>Error</dt>
        <dd class='error'>
          <% if job['backtrace'] %>
            <a href="#" class="backtrace"><%= h(job['error']) %></a>
            <pre style='display:none'><%=h job['backtrace'].join("\n") %></pre>
          <% else %>
            <%=h job['error'] %>
          <% end %>
        </dd>
        <% end %>
      </dl>
      <div class='r'>
      </div>
    </li>
  <%end%>
</ul>

<%= partial :next_more, :start => start, :size => total %>

